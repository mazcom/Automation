# syntax=docker/dockerfile:1

FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build
FROM mcr.microsoft.com/dotnet/framework/sdk:4.8

#FROM python:3.9

#RUN pip -V
#RUN pip install Microsoft.WinAppDriver.Appium.WebDriver -Version 1.0.1-Preview
#RUN dotnet add package Microsoft.WinAppDriver.Appium.WebDriver --version 1.0.1-Preview

#RUN python

#RUN pip install -r requirements.txt
# RUN pip install Microsoft.WinAppDriver.Appium.WebDriver
# RUN dotnet add package Microsoft.WinAppDriver.Appium.WebDriver

# FROM python:3

#FROM python:3.9.2

WORKDIR /app

#RUN pip install pystrich

# copy csproj and restore as distinct layers
COPY *.sln .
COPY EditButtonApp/*.csproj ./EditButtonApp/
COPY EditButtonAppTest/*.csproj ./EditButtonAppTest/

RUN dotnet restore

# copy full solution over
COPY . .

RUN Start-Process 'C:\\app\\WindowsApplicationDriver.msi' '/qn' -PassThru | Wait-Process;

#RUN  dir 'C:\\Program Files (x86)'

#RUN Start-Process 'C:\\Program Files (x86)\\Windows Application Driver\WinAppDriver.exe' -PassThru


#ENTRYPOINT ["C:\\Program Files (x86)\\Windows Application Driver\WinAppDriver.exe"]

# build the solution
RUN dotnet build


# run the unit tests
# FROM build AS test

# set the directory to be within the unit test project
#WORKDIR /app/EditButtonAppTest/

#RUN Start-Process 'C:\\Program Files (x86)\\Windows Application Driver\\WinAppDriver.exe' -PassThru

# run the unit tests
#RUN dotnet test --logger:trx


# create a new build target called testrunner
#FROM build AS testrunner
# navigate to the unit test directory
#WORKDIR /app
# when you run this build target it will run the unit tests
#WORKDIR /app/Driver
#ENTRYPOINT ["WinAppDriver"]

#WORKDIR /app

# Appium port
#EXPOSE 80

RUN reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock" /t REG_DWORD /f /v "AllowDevelopmentWithoutDevLicense" /d "1"

#ENTRYPOINT ["WinAppDriver.exe"]

#CMD ["Start-Process", "C:\\Program Files (x86)\\Windows Application Driver\\WinAppDriver.exe"]

#COPY "C:\\Program Files (x86)\\Windows Application Driver" ./

#FROM build AS driverunner
#WORKDIR /app
#COPY . .
#CMD ["StartDriver.bat"]


#FROM driverunner AS testrunner
#WORKDIR /app
#COPY . .
#CMD ["StartTests.bat"]

#CMD StartDriver.bat

#ENTRYPOINT ["StartDriver.bat"]
CMD ["StartDriver.bat" ]


#RUN 'C:\\Program Files (x86)\\Windows Application Driver\\WinAppDriver.exe'


#CMD StartDriver.bat
#RUN dotnet test --logger:trx

#CMD [ "C:\Program Files (x86)\Windows Application Driver\WinAppDriver.exe", "&&", "powershell.exe", "-NoLogo", "-ExecutionPolicy", "Bypass" ]

# create a new build target called testrunner
#FROM build AS testrunner
# navigate to the unit test directory
#WORKDIR /app

#COPY *.sln .
#COPY EditButtonApp/*.csproj ./EditButtonApp/
#COPY EditButtonAppTest/*.csproj ./EditButtonAppTest/

#COPY . .
# when you run this build target it will run the unit tests
#CMD ["dotnet", "test", "--logger:trx"]


#CMD ["dotnet", "test --logger:trx"]

# create a new layer from the build later
#FROM build AS publish

# set the working directory to be the web api project
#WORKDIR /app/EditButtonAppTest

# publish the web api project to a directory called out
#RUN dotnet publish -c Release -o out


